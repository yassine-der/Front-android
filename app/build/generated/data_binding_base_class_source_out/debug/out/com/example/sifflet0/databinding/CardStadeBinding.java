// Generated by view binder compiler. Do not edit!
package com.example.sifflet0.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sifflet0.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardStadeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardStade;

  @NonNull
  public final CircleImageView imageStade;

  @NonNull
  public final TextView nomDuStade;

  @NonNull
  public final TextView numDuSatde;

  private CardStadeBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardStade,
      @NonNull CircleImageView imageStade, @NonNull TextView nomDuStade,
      @NonNull TextView numDuSatde) {
    this.rootView = rootView;
    this.cardStade = cardStade;
    this.imageStade = imageStade;
    this.nomDuStade = nomDuStade;
    this.numDuSatde = numDuSatde;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CardStadeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardStadeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_stade, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardStadeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardStade;
      CardView cardStade = ViewBindings.findChildViewById(rootView, id);
      if (cardStade == null) {
        break missingId;
      }

      id = R.id.imageStade;
      CircleImageView imageStade = ViewBindings.findChildViewById(rootView, id);
      if (imageStade == null) {
        break missingId;
      }

      id = R.id.nomDuStade;
      TextView nomDuStade = ViewBindings.findChildViewById(rootView, id);
      if (nomDuStade == null) {
        break missingId;
      }

      id = R.id.numDuSatde;
      TextView numDuSatde = ViewBindings.findChildViewById(rootView, id);
      if (numDuSatde == null) {
        break missingId;
      }

      return new CardStadeBinding((ConstraintLayout) rootView, cardStade, imageStade, nomDuStade,
          numDuSatde);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
